const TelegramApi = require("node-telegram-bot-api");
const token = "7503662743:AAHWovLJWpUTtRZwfSPcRdPwbeHib08v6Mc";
const bot = new TelegramApi(token, { polling: true });

let isSwitched = false;
function translateDayOfWeek(day) {
  const translation = {
    monday: "–ü–æ–Ω–µ–¥—ñ–ª–æ–∫",
    tuesday: "–í—ñ–≤—Ç–æ—Ä–æ–∫",
    wednesday: "–°–µ—Ä–µ–¥–∞",
    thursday: "–ß–µ—Ç–≤–µ—Ä",
    friday: "–ü'—è—Ç–Ω–∏—Ü—è",
    saturday: "–°—É–±–æ—Ç–∞",
    sunday: "–ù–µ–¥—ñ–ª—è",
  };

  return translation[day] || day;
}

const schedule = {
  evenWeek: {
    monday: [
      { time: "08:40 - 10:15", subject: "–î–æ—Å–∏–ø–∞—Ç–∏üò¥" },
      { time: "10:35 - 12:10", subject: "–ß–∏—Å–µ–ª—å–Ω—ñ –º–µ—Ç–æ–¥–∏ (–ø—Ä.)" },
      { time: "12:20 - 13:55", subject: "–¢–µ–æ—Ä—ñ—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–ø—Ä.)" },
    ],
    tuesday: [{ time: "–°–∞–º–æ–ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞", subject: "" }],
    wednesday: [
      { time: "08:40 - 10:15", subject: "–°–∏—Å—Ç–µ–º–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–ª–µ–∫—Ü.)" },
      { time: "10:35 - 12:10", subject: "–ß–∏—Å–µ–ª—å–Ω—ñ –º–µ—Ç–æ–¥–∏ (–ª–µ–∫—Ü.)" },
      {
        time: "12:20 - 13:55",
        subject: "–°—É—á–∞—Å–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –±–∞–∑ –¥–∞–Ω–∏—Ö (–ª–µ–∫—Ü.)",
      },
    ],
    thursday: [
      { time: "08:40 - 10:15", subject: "–ê–°,–ö —Ç–∞ –ó–Ü (–ø—Ä.)" },
      { time: "10:35 - 12:10", subject: "WEB-—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó (–ª–µ–∫—Ü.)" },
      { time: "12:20 - 13:55", subject: "WEB-—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó (–ø—Ä.)" },
    ],
    friday: [
      { time: "08:40 - 10:15", subject: "–¢–µ–æ—Ä—ñ—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–ª–µ–∫—Ü.)" },
      { time: "10:35 - 12:10", subject: "–ê–°,–ö —Ç–∞ –ó–Ü (–ø—Ä.)" },
    ],
  },
  oddWeek: {
    monday: [
      { time: "08:40 - 10:15", subject: "–î–æ—Å–∏–ø–∞—Ç–∏üò¥" },
      { time: "10:35 - 12:10", subject: "–ß–∏—Å–µ–ª—å–Ω—ñ –º–µ—Ç–æ–¥–∏ (–ø—Ä.)" },
      { time: "12:20 - 13:55", subject: "–¢–µ–æ—Ä—ñ—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–ø—Ä.)" },
    ],
    tuesday: [{ time: "–°–∞–º–æ–ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞", subject: "" }],
    wednesday: [
      { time: "08:40 - 10:15", subject: "–°–∏—Å—Ç–µ–º–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–ª–µ–∫—Ü.)" },
      { time: "10:35 - 12:10", subject: "–ß–∏—Å–µ–ª—å–Ω—ñ –º–µ—Ç–æ–¥–∏ (–ª–µ–∫—Ü.)" },
      { time: "12:20 - 13:55", subject: "–°–∏—Å—Ç–µ–º–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–ª–µ–∫—Ü.)" },
    ],
    thursday: [
      { time: "08:40 - 10:15", subject: "–°–∏—Å—Ç–µ–º–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–ø—Ä.)" },
      { time: "10:35 - 12:10", subject: "WEB-—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó (–ª–µ–∫—Ü.)" },
      {
        time: "12:20 - 13:55",
        subject: "–°—É—á–∞—Å–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –±–∞–∑ –¥–∞–Ω–∏—Ö (–ª–µ–∫—Ü.)",
      },
    ],
    friday: [
      { time: "08:40 - 10:15", subject: "–¢–µ–æ—Ä—ñ—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–ª–µ–∫—Ü.)" },
      { time: "10:35 - 12:10", subject: "–ê–°,–ö —Ç–∞ –ó–Ü (–ø—Ä.)" },
      { time: "12:20 - 13:55", subject: "–ù–∞—É–∫–æ–≤–∏–π –æ–±—Ä–∞–∑ —Å–≤—ñ—Ç—É (–ª–µ–∫—Ü.)" },
    ],
  },
};

function getDayOfWeek() {
  const days = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday",
  ];
  const today = new Date();
  return days[today.getDay()];
}

function isEvenWeek() {
  const today = new Date();
  const startOfYear = new Date(today.getFullYear(), 0, 1);
  const pastDaysOfYear = (today - startOfYear) / 86400000;
  const currentWeekNumber = Math.ceil(
    (pastDaysOfYear + startOfYear.getDay() + 1) / 7
  );
  let evenWeek = currentWeekNumber % 2 === 0;

  if (isSwitched) {
    evenWeek = !evenWeek;
  }
  return evenWeek;
}
function getCurrentLesson() {
  const today = new Date();
  const currentHour = today.getHours();
  const currentMinutes = today.getMinutes();
  const currentTime = currentHour * 60 + currentMinutes;

  const daySchedule =
    (isEvenWeek() ? schedule.evenWeek : schedule.oddWeek)[getDayOfWeek()] || [];
  let currentLesson = null;

  daySchedule.forEach((lesson) => {
    if (!lesson.time.includes("-")) return;
    const [start, end] = lesson.time.split(" - ").map((t) => {
      const [hours, minutes] = t.split(":").map(Number);
      return hours * 60 + minutes;
    });

    if (currentTime >= start && currentTime <= end) {
      currentLesson = lesson;
    } else if (!currentLesson && currentTime < start) {
      currentLesson = lesson;
    }
  });

  return currentLesson;
}


bot.on("message", (msg) => {
  const text = msg.text;
  const chatId = msg.chat.id;


  if (text === "/now") {
    const currentLesson = getCurrentLesson();
    if (currentLesson) {
      bot.sendMessage(
        chatId,
        `–ó–∞—Ä–∞–∑ –∞–±–æ –æ—Å—å-–æ—Å—å –ø–æ—á–Ω–µ—Ç—å—Å—è –ø–∞—Ä–∞: ${currentLesson.subject} (${currentLesson.time})`
      );
    } else {
      bot.sendMessage(chatId, "–ù–∞ —Å—å–æ–≥–æ–¥–Ω—ñ –±—ñ–ª—å—à–µ –ø–∞—Ä –Ω–µ–º–∞—î!");
    }
  }


  if (text === "/today") {
    const today = getDayOfWeek();
    const daySchedule =
      (isEvenWeek() ? schedule.evenWeek : schedule.oddWeek)[today] || [];

    if (daySchedule.length === 0) {
      bot.sendMessage(chatId, "–°—å–æ–≥–æ–¥–Ω—ñ —É –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–Ω—è—Ç—å!");
    } else {
      let message = `–†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ (${translateDayOfWeek(
        today
      ).toUpperCase()}):\n\n`;
      daySchedule.forEach((lesson, index) => {
        message += `–ü–∞—Ä–∞ ${index + 1}: ${lesson.subject} (${lesson.time})\n`;
      });
      bot.sendMessage(chatId, message);
    }
  }

  if (text === "/even") {
    const parity = isEvenWeek() ? "–ø–∞—Ä–Ω–∏–π" : "–Ω–µ–ø–∞—Ä–Ω–∏–π";
    let message = `–¶–µ–π —Ç–∏–∂–¥–µ–Ω—å ${parity}.`;
    bot.sendMessage(chatId, message);
  }


  if (text === "/week") {
    const parity = isEvenWeek() ? "–ø–∞—Ä–Ω–∏–π" : "–Ω–µ–ø–∞—Ä–Ω–∏–π";
    const currentSchedule = isEvenWeek() ? schedule.evenWeek : schedule.oddWeek;

    let message = `–¶–µ–π —Ç–∏–∂–¥–µ–Ω—å ${parity}.\n\n–†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å:\n`;

    Object.keys(currentSchedule).forEach((day) => {
      message += `\n${translateDayOfWeek(day).toUpperCase()}:\n`;
      currentSchedule[day].forEach((lesson, index) => {
        message += `–ü–∞—Ä–∞ ${index + 1}: ${lesson.subject} (${lesson.time})\n`;
      });
    });

    bot.sendMessage(chatId, message);
  }

  if (text === "/switchweek") {
    isSwitched = !isSwitched;
    const parity = isEvenWeek() ? "–ø–∞—Ä–Ω–∏–π" : "–Ω–µ–ø–∞—Ä–Ω–∏–π";
    bot.sendMessage(chatId, `–¢–∏–∂–Ω—ñ –ø–µ—Ä–µ–º–∫–Ω—É—Ç–æ. –¢–µ–ø–µ—Ä —Ü–µ–π —Ç–∏–∂–¥–µ–Ω—å ${parity}.`);
  }
  if (text === "/help") {
    isSwitched = !isSwitched;
    const parity = isEvenWeek() ? "–ø–∞—Ä–Ω–∏–π" : "–Ω–µ–ø–∞—Ä–Ω–∏–π";
    bot.sendMessage(
      chatId,
      `/even - –ü–æ–∫–∞–∑—É—î, —á–∏ –ø–∞—Ä–Ω–∏–π –∑–∞—Ä–∞–∑ —Ç–∏–∂–¥–µ–Ω—å.\n/now - –ü–æ–∫–∞–∑—É—î, —è–∫–∞ –∑–∞—Ä–∞–∑ –ø–∞—Ä–∞.\n/today - –ü–æ–∫–∞–∑—É—î —Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ.\n/week - –ü–æ–∫–∞–∑—É—î —Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å.\n/switchweek - –ü–µ—Ä–µ–º–∏–∫–∞—î –ø–∞—Ä–Ω—ñ—Å—Ç—å —Ç–∏–∂–Ω—è.`
    );
  }
});
